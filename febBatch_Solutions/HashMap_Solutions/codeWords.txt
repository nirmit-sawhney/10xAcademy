PROBLEM->
International Morse Code defines a standard encoding where each letter is mapped to a series of dots and 
dashes, as follows: "a" maps to ".-", "b" maps to "-...", "c" maps to "-.-.", and so on.

For convenience, the full table for the 26 letters of the English alphabet is given below:

[".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..","--",
"-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."]
Now, given a list of words, each word can be written as a concatenation of the Morse code of each letter.
For example, "cab" can be written as "-.-..--...", (which is the concatenation "-.-." + ".-" + "-..."). 
We'll call such a concatenation, the transformation of a word.

Return the number of different transformations among all words we have.

INPUT->
1
gin zen gig msg

OUTPUT->
2

The transformation of each word is:
"gin" -> "--...-."
"zen" -> "--...-."
"gig" -> "--...--."
"msg" -> "--...--."
There are 2 different transformations, "--...-." and "--...--.".

find all the unique codes in the list->2

coded=""
c='g'
code=morse[c.charCodeAt(0)-97]
coded="--.."
c='i'
code=morse[c.charCodeAt(0)-97]
coded="--...-"

a->"--.."
b->"..--"
c->"..-."

map => key->value
set => keys (all the keys are unique like in map)
print set.size