time and space complexity

let say we can do one program in three ways...now the thing is which one is better out of the three 
paramteres-> time complexity and space complexity

time complexity-> to analyze how much time our program is taking to run
space complexity-> to analyze how much memory our program is consuming to run 

Big Oh notation-> O 

you need to take inputs till you got a negative one

while(true){
    let n=parseInt(readLine());
    if(n<0){
        break;
    } else {
        console.log(n);
    }
}

there can be multiple cases in this
case I-> 10 20 -10 89 389  -> 2 times  -> best case
case II-> 10 20 30 40 50 60 70 80 90 100 110 120 -5-> 11 times -> average case
case III->100...............-> 100 times -> worst case 

it can best case, average case and worst case 

how to calculate-> 
we do calculate in big oh notations

for(let i=0;i<n;i++){
    console.log(i);
}
linear time complexity
time complexity-> max number of iterations
O(n)

for(let i=0;i<=500;i++){
    console.log(i);
}
constant time complexity
O(500) -> O(1)

for(let i=0;i<n;i++){
    for(let j=i;j<n;j++){
        console.log(i*j);
    }
}
O(n*n)-> O(n^2)

for(let i=0;i<=Math.sqrt(n);i++){
    console.log(i);
}
O(logn)

space complexity-> some memory that your program is taking 

let arr=[];-> takes memory
for(let i=0;i<n;i++){
    arr.push(i);
}
O(n)

arr=[1,2,3,4,5]
O(1)

sometimes a array is given or sometimes we have to take an input array 
O(1) because we are not using any extra space

for(let i=0;i<n/2;i++){
    code
}
for(let i=0;i<n;i++){
    code
}
time complexity-> O(n)